import { Person } from '@/models/Person';
import { Company } from '@/models/Company';
import { Meeting } from '@/models/Meeting';
import { Thread } from '@/models/Thread';
import { Message } from '@/models/Message';
import { Task } from '@/models/Task';
import { Place } from '@/models/Place';
import { Interaction } from '@/models/Interaction';
import { PersonScore } from '@/models/PersonScore';

const now = new Date();
const daysAgo = (days: number) => new Date(now.getTime() - days * 24 * 60 * 60 * 1000);
const hoursAgo = (hours: number) => new Date(now.getTime() - hours * 60 * 60 * 1000);

export const mockCompanies: Company[] = [
  {
    id: 'c1',
    name: 'TechCorp',
    industry: 'Technology',
    website: 'https://techcorp.com',
    notes: 'Main client company',
    createdAt: daysAgo(180),
    updatedAt: daysAgo(30),
  },
  {
    id: 'c2',
    name: 'Design Studio',
    industry: 'Creative',
    website: 'https://designstudio.com',
    createdAt: daysAgo(90),
    updatedAt: daysAgo(15),
  },
];

export const mockPeople: Person[] = [
  {
    id: 'p1',
    firstName: 'Sarah',
    lastName: 'Johnson',
    email: 'sarah.j@email.com',
    phone: '+1 555-0101',
    birthday: new Date('1990-03-15'),
    avatar: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=400',
    relationship: 'friend',
    tags: ['college', 'hiking', 'book-club'],
    notes: 'Met at university. Loves outdoor activities.',
    lastInteraction: hoursAgo(2),
    createdAt: daysAgo(365),
    updatedAt: hoursAgo(2),
  },
  {
    id: 'p2',
    firstName: 'Michael',
    lastName: 'Chen',
    nickname: 'Mike',
    email: 'mchen@techcorp.com',
    phone: '+1 555-0102',
    birthday: new Date('1988-07-22'),
    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400',
    relationship: 'colleague',
    companyId: 'c1',
    tags: ['work', 'mentor', 'coffee'],
    notes: 'Senior developer, great mentor',
    lastInteraction: daysAgo(1),
    createdAt: daysAgo(200),
    updatedAt: daysAgo(1),
  },
  {
    id: 'p3',
    firstName: 'Emma',
    lastName: 'Wilson',
    email: 'emma.wilson@email.com',
    phone: '+1 555-0103',
    birthday: new Date('1992-11-08'),
    avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400',
    relationship: 'family',
    tags: ['sister', 'music', 'travel'],
    notes: 'Lives in Seattle. Plays violin.',
    lastInteraction: daysAgo(3),
    createdAt: daysAgo(400),
    updatedAt: daysAgo(3),
  },
  {
    id: 'p4',
    firstName: 'James',
    lastName: 'Rodriguez',
    email: 'james.r@designstudio.com',
    phone: '+1 555-0104',
    avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400',
    relationship: 'colleague',
    companyId: 'c2',
    tags: ['design', 'photography', 'cycling'],
    notes: 'UX designer, photography enthusiast',
    lastInteraction: daysAgo(7),
    createdAt: daysAgo(150),
    updatedAt: daysAgo(7),
  },
  {
    id: 'p5',
    firstName: 'Olivia',
    lastName: 'Brown',
    email: 'olivia.b@email.com',
    birthday: new Date('1995-05-20'),
    avatar: 'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=400',
    relationship: 'friend',
    tags: ['yoga', 'cooking', 'movies'],
    notes: 'Yoga instructor, amazing cook',
    lastInteraction: daysAgo(14),
    createdAt: daysAgo(250),
    updatedAt: daysAgo(14),
  },
];

export const mockPlaces: Place[] = [
  {
    id: 'pl1',
    name: 'Blue Bottle Coffee',
    address: '456 Market St, San Francisco, CA',
    latitude: 37.7749,
    longitude: -122.4194,
    category: 'cafe',
    notes: 'Great for morning meetings',
    createdAt: daysAgo(100),
    updatedAt: daysAgo(10),
  },
  {
    id: 'pl2',
    name: 'Central Park',
    address: 'New York, NY',
    latitude: 40.7829,
    longitude: -73.9654,
    category: 'park',
    notes: 'Weekend walks',
    createdAt: daysAgo(200),
    updatedAt: daysAgo(30),
  },
  {
    id: 'pl3',
    name: 'The Italian Place',
    address: '789 Pine St, San Francisco, CA',
    latitude: 37.7749,
    longitude: -122.4094,
    category: 'restaurant',
    notes: 'Birthday dinners',
    createdAt: daysAgo(150),
    updatedAt: daysAgo(45),
  },
];

export const mockMeetings: Meeting[] = [
  {
    id: 'm1',
    title: 'Coffee catch-up with Sarah',
    personIds: ['p1'],
    placeId: 'pl1',
    date: hoursAgo(2),
    duration: 60,
    notes: 'Discussed her new job opportunity',
    type: 'in-person',
    createdAt: hoursAgo(2),
    updatedAt: hoursAgo(2),
  },
  {
    id: 'm2',
    title: 'Team sync with Mike',
    personIds: ['p2'],
    date: daysAgo(1),
    duration: 30,
    notes: 'Project roadmap review',
    type: 'video',
    createdAt: daysAgo(1),
    updatedAt: daysAgo(1),
  },
  {
    id: 'm3',
    title: 'Birthday dinner',
    personIds: ['p3', 'p5'],
    placeId: 'pl3',
    date: daysAgo(14),
    duration: 120,
    notes: 'Emma\'s birthday celebration',
    type: 'in-person',
    createdAt: daysAgo(14),
    updatedAt: daysAgo(14),
  },
];

export const mockThreads: Thread[] = [
  {
    id: 't1',
    personIds: ['p1'],
    lastMessageAt: hoursAgo(1),
    platform: 'whatsapp',
    unreadCount: 2,
    createdAt: daysAgo(100),
    updatedAt: hoursAgo(1),
  },
  {
    id: 't2',
    personIds: ['p2'],
    lastMessageAt: daysAgo(1),
    platform: 'sms',
    unreadCount: 0,
    createdAt: daysAgo(50),
    updatedAt: daysAgo(1),
  },
  {
    id: 't3',
    personIds: ['p3'],
    lastMessageAt: daysAgo(3),
    platform: 'messenger',
    unreadCount: 0,
    createdAt: daysAgo(200),
    updatedAt: daysAgo(3),
  },
];

export const mockMessages: Message[] = [
  {
    id: 'msg1',
    threadId: 't1',
    senderId: 'p1',
    content: 'Thanks for the coffee! Let\'s do it again soon',
    sentAt: hoursAgo(1),
    isFromMe: false,
    createdAt: hoursAgo(1),
    updatedAt: hoursAgo(1),
  },
  {
    id: 'msg2',
    threadId: 't1',
    senderId: 'me',
    content: 'Absolutely! How about next week?',
    sentAt: hoursAgo(2),
    isFromMe: true,
    createdAt: hoursAgo(2),
    updatedAt: hoursAgo(2),
  },
];

export const mockTasks: Task[] = [
  {
    id: 'task1',
    title: 'Call Emma for her birthday',
    personId: 'p3',
    dueDate: new Date(now.getTime() + 5 * 24 * 60 * 60 * 1000),
    completed: false,
    type: 'birthday',
    createdAt: daysAgo(10),
    updatedAt: daysAgo(10),
  },
  {
    id: 'task2',
    title: 'Follow up with Mike on project',
    personId: 'p2',
    dueDate: new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000),
    completed: false,
    type: 'follow-up',
    description: 'Check on the API integration progress',
    createdAt: daysAgo(2),
    updatedAt: daysAgo(2),
  },
  {
    id: 'task3',
    title: 'Send Olivia recipe',
    personId: 'p5',
    completed: true,
    completedAt: daysAgo(1),
    type: 'reminder',
    createdAt: daysAgo(5),
    updatedAt: daysAgo(1),
  },
];

export const mockInteractions: Interaction[] = [
  {
    id: 'i1',
    personId: 'p1',
    type: 'meeting',
    date: hoursAgo(2),
    duration: 60,
    placeId: 'pl1',
    meetingId: 'm1',
    createdAt: hoursAgo(2),
    updatedAt: hoursAgo(2),
  },
  {
    id: 'i2',
    personId: 'p1',
    type: 'message',
    date: hoursAgo(1),
    threadId: 't1',
    createdAt: hoursAgo(1),
    updatedAt: hoursAgo(1),
  },
  {
    id: 'i3',
    personId: 'p2',
    type: 'meeting',
    date: daysAgo(1),
    duration: 30,
    meetingId: 'm2',
    createdAt: daysAgo(1),
    updatedAt: daysAgo(1),
  },
  {
    id: 'i4',
    personId: 'p3',
    type: 'message',
    date: daysAgo(3),
    threadId: 't3',
    createdAt: daysAgo(3),
    updatedAt: daysAgo(3),
  },
];

export const mockPersonScores: PersonScore[] = [
  {
    id: 'ps1',
    personId: 'p1',
    relationshipScore: 95,
    interactionFrequency: 12,
    lastInteractionDaysAgo: 0,
    totalInteractions: 45,
    averageResponseTime: 2,
    calculatedAt: now,
  },
  {
    id: 'ps2',
    personId: 'p2',
    relationshipScore: 88,
    interactionFrequency: 8,
    lastInteractionDaysAgo: 1,
    totalInteractions: 32,
    averageResponseTime: 4,
    calculatedAt: now,
  },
  {
    id: 'ps3',
    personId: 'p3',
    relationshipScore: 92,
    interactionFrequency: 6,
    lastInteractionDaysAgo: 3,
    totalInteractions: 28,
    averageResponseTime: 12,
    calculatedAt: now,
  },
  {
    id: 'ps4',
    personId: 'p4',
    relationshipScore: 72,
    interactionFrequency: 3,
    lastInteractionDaysAgo: 7,
    totalInteractions: 15,
    averageResponseTime: 24,
    calculatedAt: now,
  },
  {
    id: 'ps5',
    personId: 'p5',
    relationshipScore: 65,
    interactionFrequency: 2,
    lastInteractionDaysAgo: 14,
    totalInteractions: 12,
    averageResponseTime: 36,
    calculatedAt: now,
  },
];